# 端口配置
server.port=8090
#########################日志配置######################
# 自定义控制台输出日志格式
logging.pattern.console=%d{yyyy/MM/dd-HH:mm:ss} [%thread] %-5level %logger- %msg%n 
# cn.sitedev包下的日志以INFO级别输出
logging.level.cn.sitedev=INFO
# root日志DEBUG级别输出
logging.level.root=INFO
#############################数据源配置###########################
# 数据库配置
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# 此处添加&useSSL=false的配置,是为了去除控制台关于mysql ssl的警告信息
spring.datasource.url=jdbc:mysql://localhost:3306/spring-security?useUnicode=yes&characterEncoding=UTF-8&useSSL=false
spring.datasource.username=root
spring.datasource.password=root
# 配置session的存储类型(参见StoreType,有以下类型:REDIS,MONGO,JDBC,HAZELCAST,HASH_MAP,NONE)
# 存储类型不区分大小写,这里我们将session的存储类型设置为none
spring.session.store-type=REDIS
# 配置redis地址
spring.redis.host=localhost
# 配置redis端口
spring.redis.port=6379
# 默认打开springsecurity的配置
# 如果springboot在classpath中找到springsecurity相关包,会自动进行springsecurity的相关配置
# security.basic.enabled=false
# 登陆页配置(如果该选项配置,则跳转至该配置页,如果未配置,则跳转至security-browser的signIn.html)
# my.security.browser.loginPage=/demo-signIn.html
# 登陆类型配置(这里配置为JSON)(能配置的有REDIRECT和JSON)
my.security.browser.loginType=JSON
# 注册页url
my.security.browser.signUpUrl=/demo-signUp.html
# 退出登录url
my.security.browser.signOutUrl=/demo-signOut.html
# 验证码长度配置
my.security.code.image.length=6
# 验证码宽度配置
my.security.code.image.width=100
# 需要进行图片验证码校验的url配置(多个url之间用逗号分隔)
# 如果需要测试qq,微博等三方登录后的注册,绑定功能(demo_signUp.html),请注释该行,或者排除/user/regist,/user/binding接口
#my.security.code.image.url=/user/*
# 需要进行短信验证码校验的url配置(多个url之间用逗号分隔)
# 如果需要测试qq,微博等三方登录后的注册,绑定功能(demo_signUp.html),请注释该行,或者排除/user/regist,/user/binding接口
#my.security.code.sms.url=/user/*
# 注:由于回调域名不是localhost,因此,在测试qq,weixin,weibo第三方登录时,在hosts文件中配置127.0.0.1 www.merryyou.cn
# 测试时,浏览器访问的地址也是http://www.merryyou.cn/......
# QQ的appId配置
my.security.social.qq.app-id=101448999
# QQ的appSecret配置
my.security.social.qq.app-secret=1d958787a87559bad371c0a9e26eef61
# spring social登录处理url + 服务服务提供商id = QQ互联中设置的网站回调地址URI
# spring social登录处理url配置
my.security.social.filterProcessesUrl=/login
# 服务提供商id
my.security.social.qq.providerId=qq
# 注:微信appid和appsecret需要在微信开放平台申请
# 微信appid配置
my.security.social.weixin.app-id=wxfd6965ab1fc6adb2
# 微信appsecret配置
my.security.social.weixin.app-secret=66bb4566de776ac699ec1dbed0cc3dd1
# 新浪微博appId配置
my.security.social.weibo.app-id=491608476
# 新浪微博appSecret配置
my.security.social.weibo.app-secret=b2dd0d4199ddc9d64e75d9dd6007ca82
# 新浪微博服务提供商id
my.security.social.weibo.providerId=weibo
# 使用JDK 动态代理,不使用CGLIB代理
# 配置此项是为了解决访问'/connect/'地址时报错:Could not generate CGLIB subclass of class [class org.springframework.social.connect.jdbc.JdbcUsersConnectionRepository]: Common causes of this problem include using a final class or a non-visible class; nested exception is java.lang.IllegalArgumentException: Superclass has no null constructors but no arguments were given
spring.aop.proxy-target-class=false

# 设置session超时时间(单位:s)(springboot中session最低超时时间为1min,如果这里设置的超时时间不足1min,则超时时间为1min)
# 详细解释参见TomcatEmbeddedServletContainerFactory类的getSessionTimeoutInMinutes()方法
server.session.timeout=600

# security oauth2 clientId和clientSecret配置
security.oauth2.client.client-id=myClientId
security.oauth2.client.client-secret=myClientSecret